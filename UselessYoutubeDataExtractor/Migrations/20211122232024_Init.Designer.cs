// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UselessYoutubeDataExtractor.Data;

namespace UselessYoutubeDataExtractor.Migrations
{
    [DbContext(typeof(UselessYoutubeDataExtractorDbContext))]
    [Migration("20211122232024_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("UselessYoutubeDataExtractor.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<int>("RepliesCount")
                        .HasColumnType("int");

                    b.Property<string>("VideoDataId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("VideoDataId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("UselessYoutubeDataExtractor.Entities.VideoData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("int");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("VideoData");
                });

            modelBuilder.Entity("UselessYoutubeDataExtractor.Entities.Comment", b =>
                {
                    b.HasOne("UselessYoutubeDataExtractor.Entities.VideoData", "VideoData")
                        .WithMany("Comments")
                        .HasForeignKey("VideoDataId");

                    b.Navigation("VideoData");
                });

            modelBuilder.Entity("UselessYoutubeDataExtractor.Entities.VideoData", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
